document.addEventListener("DOMContentLoaded",(function(){var e=[].slice.call(document.querySelectorAll("img.lazy")),t=[].slice.call(document.querySelectorAll(".lazy-background")),n=[].slice.call(document.querySelectorAll("[data-bg]"));if("IntersectionObserver"in window){let c=new IntersectionObserver((function(e,t){e.forEach((function(e){if(e.isIntersecting){let t=e.target;t.src=t.dataset.src,t.srcset=t.dataset.srcset,t.classList.remove("lazy"),c.unobserve(t)}}))}));e.forEach((function(e){c.observe(e)}));let r=new IntersectionObserver((function(e,t){e.forEach((function(e){e.isIntersecting&&(e.target.classList.add("visible"),r.unobserve(e.target))}))}));t.forEach((function(e){r.observe(e)}));let o=new IntersectionObserver((function(e,t){e.forEach((function(e){if(e.isIntersecting){let t=e.target;t.style.backgroundImage="url("+t.dataset.bg+")",o.unobserve(t)}}))}));n.forEach((function(e){o.observe(e)}))}else e.forEach((function(e){e.src=e.dataset.src,e.srcset=e.dataset.srcset})),t.forEach((function(e){e.classList.add("visible")})),n.forEach((function(e){e.style.backgroundImage="url("+e.dataset.bg+")"}))}));var containerEl=document.querySelector(".container-filter"),mixer=mixitup(containerEl);$(".burger").click((function(){$(".mobile-menu").fadeIn().toggle()})),$(".scroll-to").click((function(){$(".mobile-menu").css("display","none"),$(".mobile-menu").hide()})),$("a.scroll-to").on("click",(function(e){e.preventDefault();var t=$(this).attr("href");$("#burger1").prop("checked",!1),$("html, body").stop().animate({scrollTop:$(t).offset().top-50},800)}));